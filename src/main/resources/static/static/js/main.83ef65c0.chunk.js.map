{"version":3,"sources":["logo.svg","actions/types.js","actions/projectActions.js","components/Project/ProjectItem.js","components/Project/CreateProjectButton.js","components/Dashboard.js","components/Layout/Header.js","components/Project/AddProject.js","reducers/errorReducer.js","reducers/projectReducer.js","reducers/index.js","store.js","components/Project/UpdateProject.js","App.js","reportWebVitals.js","index.js"],"names":["GET_ERRORS","GET_PROJECTS","GET_PROJECT","DELETE_PROJECT","createProject","project","history","dispatch","a","axios","post","push","type","payload","response","data","ProjectItem","onDeleteClick","id","props","deleteProject","this","className","projectIdentifier","projectName","description","href","to","onClick","bind","Component","connect","window","confirm","delete","CreateProjectButton","Dashboard","getProjects","projects","map","state","get","res","Header","data-toggle","data-target","AddProject","start_date","end_date","errors","onChange","onSubmit","someProps","setState","e","preventDefault","newProject","target","name","value","classnames","placeholder","initialState","combineReducers","action","filter","initalState","middleware","thunk","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","__REDUX_DEVTOOLS_EXTENSION__","UpdateProject","nextProps","match","params","getProject","updateProject","disabled","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.83ef65c0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export const GET_ERRORS = \"GET_ERRORS\";\nexport const GET_PROJECTS = \"GET_PROJECTS\";\nexport const GET_PROJECT = \"GET_PROJECT\";\nexport const DELETE_PROJECT = \"DELETE_PROJECT\";\n","import axios from \"axios\";\nimport { GET_ERRORS, GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"./types\";\n\nexport const createProject = (project, history) => async (dispatch) => {\n  try {\n    await axios.post(\"http://localhost:8080/api/project\", project);\n    history.push(\"/dashboard\");\n  } catch (err) {\n    // dispatch a specific type of event/action: type: GET_ERRORS\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data,\n    });\n  }\n};\n\nexport const getProjects = () => async (dispatch) => {\n  const res = await axios.get(\"http://localhost:8080/api/project/all\");\n  dispatch({\n    type: GET_PROJECTS,\n    payload: res.data,\n  });\n};\n\nexport const getProject = (id, history) => async (dispatch) => {\n  try {\n    const res = await axios.get(`/api/project/${id}`);\n    dispatch({\n      type: GET_PROJECT,\n      payload: res.data,\n    });\n  } catch (error) {\n    history.push(\"/dashboard\");\n  }\n};\n\nexport const deleteProject = (id) => async (dispatch) => {\n  if (\n    window.confirm(\n      \"Are you sure? This will delete the project and all the data related to it\"\n    )\n  ) {\n    await axios.delete(`/api/project/${id}`);\n    dispatch({\n      type: DELETE_PROJECT,\n      payload: id,\n    });\n  }\n};\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { deleteProject } from \"../../actions/projectActions\";\n\nclass ProjectItem extends Component {\n  onDeleteClick = (id) => {\n    this.props.deleteProject(id);\n  };\n\n  render() {\n    const { project } = this.props;\n    return (\n      <div className=\"container\">\n        <div className=\"card card-body bg-light mb-3\">\n          <div className=\"row\">\n            <div className=\"col-2\">\n              <span className=\"mx-auto\">{project.projectIdentifier}</span>\n            </div>\n            <div className=\"col-lg-6 col-md-4 col-8\">\n              <h3>{project.projectName}</h3>\n              <p>{project.description}</p>\n            </div>\n            <div className=\"col-md-4 d-none d-lg-block\">\n              <ul className=\"list-group\">\n                <a href=\"#\">\n                  <li className=\"list-group-item board\">\n                    <i className=\"fa fa-flag-checkered pr-1\">Project Board </i>\n                  </li>\n                </a>\n                <Link to={`/updateProject/${project.projectIdentifier}`}>\n                  <li className=\"list-group-item update\">\n                    <i className=\"fa fa-edit pr-1\"> Update Project Info</i>\n                  </li>\n                </Link>\n\n                <li\n                  className=\"list-group-item delete\"\n                  onClick={this.onDeleteClick.bind(\n                    this,\n                    project.projectIdentifier\n                  )}\n                >\n                  <i className=\"fa fa-minus-circle pr-1\"> Delete Project</i>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nProjectItem.propTypes = {\n  deleteProject: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { deleteProject })(ProjectItem);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst CreateProjectButton = () => {\n  return (\n    <Link to=\"/addProject\" className=\"btn btn-lg btn-info\">\n      Create a Project\n    </Link>\n  );\n};\n\nexport default CreateProjectButton;\n","import React, { Component } from \"react\";\nimport ProjectItem from \"./Project/ProjectItem\";\nimport CreateProjectButton from \"./Project/CreateProjectButton\";\nimport { connect } from \"react-redux\";\nimport { getProjects } from \"../actions/projectActions\";\nimport PropTypes from \"prop-types\";\n\nclass Dashboard extends Component {\n  componentDidMount() {\n    this.props.getProjects();\n  }\n  render() {\n    const { projects } = this.props.project;\n    return (\n      <div className=\"projects\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <h1 className=\"display-4 text-center\">Projects</h1>\n              <br />\n              <CreateProjectButton />\n              <br />\n              <hr />\n              {projects.map((project) => (\n                <ProjectItem key={project.id} project={project} />\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nDashboard.propTypes = {\n  project: PropTypes.object.isRequired,\n  getProjects: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  project: state.project,\n});\n\nexport default connect(mapStateToProps, { getProjects })(Dashboard);\n","import React, { Component } from \"react\";\n\nclass Header extends Component {\n  render() {\n    return (\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\n        <div className=\"container\">\n          <a className=\"navbar-brand\" href=\"Dashboard.html\">\n            Personal Project Management Tool\n          </a>\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#mobile-nav\"\n          >\n            <span className=\"navbar-toggler-icon\" />\n          </button>\n\n          <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n            <ul className=\"navbar-nav mr-auto\">\n              <li className=\"nav-item\">\n                <a className=\"nav-link\" href=\"/dashboard\">\n                  {\" \"}\n                  Dashboard{\" \"}\n                </a>\n              </li>\n            </ul>\n\n            <ul className=\"navbar-nav ml-auto\">\n              <li className=\"nav-item\">\n                <a className=\"nav-link\" href=\"register.html\">\n                  {\" \"}\n                  Sign Up{\" \"}\n                </a>\n              </li>\n              <li className=\"nav-item\">\n                <a className=\"nav-link\" href=\"login.html\">\n                  {\" \"}\n                  Login{\" \"}\n                </a>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </nav>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { createProject } from \"../../actions/projectActions\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\nclass AddProject extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      projectName: \"\",\n      projectIdentifier: \"\",\n      description: \"\",\n      start_date: \"\",\n      end_date: \"\",\n      errors: {},\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentWillReceiveProps(someProps) {\n    if (someProps.errors) {\n      this.setState({ errors: someProps.errors });\n    }\n  }\n  onSubmit(e) {\n    e.preventDefault();\n    const newProject = {\n      projectName: this.state.projectName,\n      projectIdentifier: this.state.projectIdentifier,\n      description: this.state.description,\n      start_date: this.state.start_date,\n      end_date: this.state.end_date,\n    };\n\n    // new project will be sent to the BE\n    this.props.createProject(newProject, this.props.history);\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"project\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h5 className=\"display-4 text-center\">\n                Create / Edit Project form\n              </h5>\n              <hr />\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.projectName,\n                    })}\n                    placeholder=\"Project Name\"\n                    name=\"projectName\"\n                    value={this.state.projectName}\n                    onChange={this.onChange}\n                  />\n                  {errors.projectName && (\n                    <div className=\"invalid-feedback\">{errors.projectName}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.projectIdentifier,\n                    })}\n                    name=\"projectIdentifier\"\n                    placeholder=\"Unique Project ID\"\n                    value={this.state.projectIdentifier}\n                    onChange={this.onChange}\n                  />\n                  {errors.projectIdentifier && (\n                    <div className=\"invalid-feedback\">\n                      {errors.projectIdentifier}\n                    </div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <textarea\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.description,\n                    })}\n                    placeholder=\"Project Description\"\n                    name=\"description\"\n                    value={this.state.description}\n                    onChange={this.onChange}\n                  ></textarea>\n                  {errors.description && (\n                    <div className=\"invalid-feedback\">{errors.description}</div>\n                  )}\n                </div>\n                <h6>Start Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"start_date\"\n                    value={this.state.start_date}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <h6>Estimated End Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"end_date\"\n                    value={this.state.end_date}\n                    onChange={this.onChange}\n                  />\n                </div>\n\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block mt-4\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nAddProject.propTypes = {\n  createProject: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps, { createProject })(AddProject);\n","import { GET_ERRORS } from \"../actions/types\";\n\nconst initialState = {};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_ERRORS:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n","import { GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"../actions/types\";\n\nconst initialState = {\n  projects: [],\n  project: {},\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_PROJECTS:\n      return {\n        ...state,\n        projects: action.payload,\n      };\n    case GET_PROJECT:\n      return {\n        ...state,\n        project: action.payload,\n      };\n\n    case DELETE_PROJECT:\n      return {\n        ...state,\n        projects: state.projects.filter(\n          (project) => project.projectIdentifier !== action.payload\n        ),\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport errorReducer from \"./errorReducer\";\nimport projectReducer from \"./projectReducer\";\n\nexport default combineReducers({\n  errors: errorReducer,\n  project: projectReducer,\n});\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst initalState = {};\nconst middleware = [thunk];\n\nlet store;\n\nif (window.navigator.userAgent.includes(\"Chrome\")) {\n  store = createStore(\n    rootReducer,\n    initalState,\n    compose(\n      applyMiddleware(...middleware),\n      window.__REDUX_DEVTOOLS_EXTENSION__ &&\n        window.__REDUX_DEVTOOLS_EXTENSION__()\n    )\n  );\n} else {\n  store = createStore(\n    rootReducer,\n    initalState,\n    compose(applyMiddleware(...middleware))\n  );\n}\n\nexport default store;\n","import React, { Component } from \"react\";\nimport { getProject, createProject } from \"../../actions/projectActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\n\nclass UpdateProject extends Component {\n  //set state\n  constructor() {\n    super();\n\n    this.state = {\n      id: \"\",\n      projectName: \"\",\n      projectIdentifier: \"\",\n      description: \"\",\n      start_date: \"\",\n      end_date: \"\",\n      errors: {}\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n    const {\n      id,\n      projectName,\n      projectIdentifier,\n      description,\n      start_date,\n      end_date\n    } = nextProps.project;\n\n    this.setState({\n      id,\n      projectName,\n      projectIdentifier,\n      description,\n      start_date,\n      end_date\n    });\n  }\n\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    this.props.getProject(id, this.props.history);\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const updateProject = {\n      id: this.state.id,\n      projectName: this.state.projectName,\n      projectIdentifier: this.state.projectIdentifier,\n      description: this.state.description,\n      start_date: this.state.start_date,\n      end_date: this.state.end_date\n    };\n\n    this.props.createProject(updateProject, this.props.history);\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"project\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h5 className=\"display-4 text-center\">Update Project form</h5>\n              <hr />\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.projectName\n                    })}\n                    placeholder=\"Project Name\"\n                    name=\"projectName\"\n                    value={this.state.projectName}\n                    onChange={this.onChange}\n                  />\n                  {errors.projectName && (\n                    <div className=\"invalid-feedback\">{errors.projectName}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Unique Project ID\"\n                    name=\"projectIdentifier\"\n                    value={this.state.projectIdentifier}\n                    onChange={this.onChange}\n                    disabled\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <textarea\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.description\n                    })}\n                    placeholder=\"Project Description\"\n                    name=\"description\"\n                    onChange={this.onChange}\n                    value={this.state.description}\n                  />\n                  {errors.description && (\n                    <div className=\"invalid-feedback\">{errors.description}</div>\n                  )}\n                </div>\n                <h6>Start Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"start_date\"\n                    value={this.state.start_date}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <h6>Estimated End Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"end_date\"\n                    value={this.state.end_date}\n                    onChange={this.onChange}\n                  />\n                </div>\n\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block mt-4\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nUpdateProject.propTypes = {\n  getProject: PropTypes.func.isRequired,\n  createProject: PropTypes.func.isRequired,\n  project: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  project: state.project.project,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { getProject, createProject }\n)(UpdateProject);\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Dashboard from \"./components/Dashboard\";\nimport Header from \"./components/Layout/Header\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport AddProject from \"./components/Project/AddProject\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport UpdateProject from \"./components/Project/UpdateProject\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <div className=\"App\">\n          <Header />\n          <Route exact path=\"/addProject\" component={AddProject} />\n          <Route exact path=\"/dashboard\" component={Dashboard} />\n          <Route exact path=\"/updateProject/:id\" component={UpdateProject} />\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}