{"version":3,"sources":["logo.svg","actions/types.js","actions/projectActions.js","components/Project/ProjectItem.js","components/Project/CreateProjectButton.js","components/Dashboard.js","securityUtils/setJWTToken.js","components/Layout/Header.js","actions/securityAction.js","components/Project/AddProject.js","reducers/errorReducer.js","reducers/projectReducer.js","reducers/securityReducer.js","reducers/backlogReducer.js","reducers/index.js","store.js","components/Project/UpdateProject.js","components/ProjectBoard/ProjectTasks/ProjectTask.js","actions/backlogActions.js","components/ProjectBoard/Backlog.js","components/ProjectBoard/ProjectBoard.js","components/ProjectBoard/ProjectTasks/AddProjectTask.js","components/ProjectBoard/ProjectTasks/UpdateProjectTask.js","components/Layout/Landing.js","components/UserManagement/Register.js","components/UserManagement/Login.js","App.js","reportWebVitals.js","index.js"],"names":["GET_ERRORS","GET_PROJECTS","GET_PROJECT","DELETE_PROJECT","GET_BACKLOG","GET_PROJECT_TASK","DELETE_PROJECT_TASK","SET_CURRENT_USER","createProject","project","history","dispatch","a","axios","post","push","type","payload","response","data","ProjectItem","onDeleteClick","id","props","deleteProject","this","className","projectIdentifier","projectName","description","to","onClick","bind","Component","connect","window","confirm","delete","CreateProjectButton","Dashboard","getProjects","projects","map","state","get","res","require","default","setJWTToken","token","defaults","headers","common","Header","logout","location","href","headerLinks","security","validToken","user","userIsAuthenticated","fullName","userIsNotAuthenticated","data-toggle","data-target","localStorage","removeItem","AddProject","start_date","end_date","errors","onChange","onSubmit","someProps","setState","e","preventDefault","newProject","target","name","value","classnames","placeholder","initialState","booleanActionPayload","project_tasks","project_task","combineReducers","action","filter","backlog","projectSequence","initalState","middleware","thunk","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","__REDUX_DEVTOOLS_EXTENSION__","UpdateProject","nextProps","match","params","getProject","updateProject","disabled","ProjectTask","backlog_id","pt_id","deleteProjectTask","priorityString","priorityClass","priority","summary","acceptanceCriteria","Backlog","tasks","project_tasks_prop","todoItems","inProgressItems","doneItems","i","length","status","ProjectBoard","getBacklog","BoardContent","projectNotFound","role","boardAlgorithm","AddProjectTask","dueDate","newTask","addProjectTask","UpdateProjectTask","create_At","getProjectTask","updateProjectTask","patch","Landing","Register","username","password","confirmPassword","newUser","createNewUser","Login","LoginRequest","login","setItem","decoded","jwt_decode","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.261f8521.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export const GET_ERRORS = \"GET_ERRORS\";\nexport const GET_PROJECTS = \"GET_PROJECTS\";\nexport const GET_PROJECT = \"GET_PROJECT\";\nexport const DELETE_PROJECT = \"DELETE_PROJECT\";\n\n//Types for BACKLOG ACTIONS\n\nexport const GET_BACKLOG = \"GET_BACKLOG\";\nexport const GET_PROJECT_TASK = \"GET_PROJECT_TASK\";\nexport const DELETE_PROJECT_TASK = \"DELETE_PROJECT_TASK\";\n\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\n","import axios from \"axios\";\nimport { GET_ERRORS, GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"./types\";\n\nexport const createProject = (project, history) => async (dispatch) => {\n  try {\n    await axios.post(`/api/project`, project);\n    history.push(\"/dashboard\");\n  } catch (err) {\n    // dispatch a specific type of event/action: type: GET_ERRORS\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data,\n    });\n  }\n};\n\nexport const getProjects = () => async (dispatch) => {\n  const res = await axios.get(`/api/project/all`);\n  dispatch({\n    type: GET_PROJECTS,\n    payload: res.data,\n  });\n};\n\nexport const getProject = (id, history) => async (dispatch) => {\n  try {\n    const res = await axios.get(`/api/project/${id}`);\n    dispatch({\n      type: GET_PROJECT,\n      payload: res.data,\n    });\n  } catch (error) {\n    history.push(\"/dashboard\");\n  }\n};\n\nexport const deleteProject = (id) => async (dispatch) => {\n  if (\n    window.confirm(\n      \"Are you sure? This will delete the project and all the data related to it\"\n    )\n  ) {\n    await axios.delete(`/api/project/${id}`);\n    dispatch({\n      type: DELETE_PROJECT,\n      payload: id,\n    });\n  }\n};\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { deleteProject } from \"../../actions/projectActions\";\n\nclass ProjectItem extends Component {\n  onDeleteClick = (id) => {\n    this.props.deleteProject(id);\n  };\n\n  render() {\n    const { project } = this.props;\n    return (\n      <div className=\"container\">\n        <div className=\"card card-body bg-light mb-3\">\n          <div className=\"row\">\n            <div className=\"col-2\">\n              <span className=\"mx-auto\">{project.projectIdentifier}</span>\n            </div>\n            <div className=\"col-lg-6 col-md-4 col-8\">\n              <h3>{project.projectName}</h3>\n              <p>{project.description}</p>\n            </div>\n            <div className=\"col-md-4 d-none d-lg-block\">\n              <ul className=\"list-group\">\n                <Link to={`/projectBoard/${project.projectIdentifier}`}>\n                  <li className=\"list-group-item board\">\n                    <i className=\"fa fa-flag-checkered pr-1\"> Project Board </i>\n                  </li>\n                </Link>\n                <Link to={`/updateProject/${project.projectIdentifier}`}>\n                  <li className=\"list-group-item update\">\n                    <i className=\"fa fa-edit pr-1\"> Update Project Info</i>\n                  </li>\n                </Link>\n\n                <li\n                  className=\"list-group-item delete\"\n                  onClick={this.onDeleteClick.bind(\n                    this,\n                    project.projectIdentifier\n                  )}\n                >\n                  <i className=\"fa fa-minus-circle pr-1\"> Delete Project</i>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nProjectItem.propTypes = {\n  deleteProject: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { deleteProject })(ProjectItem);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst CreateProjectButton = () => {\n  return (\n    <Link to=\"/addProject\" className=\"btn btn-lg btn-info\">\n      Create a Project\n    </Link>\n  );\n};\n\nexport default CreateProjectButton;\n","import React, { Component } from \"react\";\nimport ProjectItem from \"./Project/ProjectItem\";\nimport CreateProjectButton from \"./Project/CreateProjectButton\";\nimport { connect } from \"react-redux\";\nimport { getProjects } from \"../actions/projectActions\";\nimport PropTypes from \"prop-types\";\n\nclass Dashboard extends Component {\n  componentDidMount() {\n    this.props.getProjects();\n  }\n\n  render() {\n    const { projects } = this.props.project;\n\n    return (\n      <div className=\"projects\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <h1 className=\"display-4 text-center\">Projects</h1>\n              <br />\n              <CreateProjectButton />\n\n              <br />\n              <hr />\n              {projects.map((project) => (\n                <ProjectItem key={project.id} project={project} />\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nDashboard.propTypes = {\n  project: PropTypes.object.isRequired,\n  getProjects: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  project: state.project,\n});\n\nexport default connect(mapStateToProps, { getProjects })(Dashboard);\n","const { default: axios } = require(\"axios\");\n\nconst setJWTToken = (token) => {\n  if (token) {\n    axios.defaults.headers.common[\"Authorization\"] = token;\n  } else {\n    delete axios.defaults.headers.common[\"Authorization\"];\n  }\n};\n\nexport default setJWTToken;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { logout } from \"../../actions/securityAction\";\n\nclass Header extends Component {\n  logout() {\n    this.props.logout();\n    window.location.href = \"/\";\n  }\n  render() {\n    const { validToken, user } = this.props.security;\n\n    const userIsAuthenticated = (\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n        <ul className=\"navbar-nav mr-auto\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/dashboard\">\n              Dashboard\n            </Link>\n          </li>\n        </ul>\n\n        <ul className=\"navbar-nav ml-auto\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/dashboard\">\n              <i className=\"fas fa-user-circle mr-1\" />\n              {user.fullName}\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link\n              className=\"nav-link\"\n              to=\"/logout\"\n              onClick={this.logout.bind(this)}\n            >\n              Logout\n            </Link>\n          </li>\n        </ul>\n      </div>\n    );\n\n    const userIsNotAuthenticated = (\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n        <ul className=\"navbar-nav ml-auto\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/register\">\n              Sign Up\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/login\">\n              Login\n            </Link>\n          </li>\n        </ul>\n      </div>\n    );\n\n    let headerLinks;\n\n    if (validToken && user) {\n      headerLinks = userIsAuthenticated;\n    } else {\n      headerLinks = userIsNotAuthenticated;\n    }\n\n    return (\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\n        <div className=\"container\">\n          <Link className=\"navbar-brand\" to=\"/\">\n            Personal Project Management Tool\n          </Link>\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#mobile-nav\"\n          >\n            <span className=\"navbar-toggler-icon\" />\n          </button>\n\n          {headerLinks}\n        </div>\n      </nav>\n    );\n  }\n}\n\nHeader.propTypes = {\n  security: PropTypes.object.isRequired,\n  logout: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  security: state.security,\n});\n\nexport default connect(mapStateToProps, { logout })(Header);\n","import axios from \"axios\";\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./types\";\nimport setJWTToken from \"../securityUtils/setJWTToken\";\nimport jwt_decode from \"jwt-decode\";\n\nexport const createNewUser = (newUser, history) => async (dispatch) => {\n  try {\n    await axios.post(\"/api/users/register\", newUser);\n    history.push(\"/login\");\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data,\n    });\n  }\n};\n\nexport const login = (LoginRequest) => async (dispatch) => {\n  try {\n    const res = await axios.post(\"/api/users/login\", LoginRequest);\n    // extract token from res.data\n    const { token } = res.data;\n\n    // store the token in the localStorage\n    localStorage.setItem(\"jwtToken\", token);\n\n    // set our token in header\n    setJWTToken(token);\n\n    // decode the token on React\n    const decoded = jwt_decode(token);\n    // dispatch GET_CURRENT_USER\n    dispatch({\n      type: SET_CURRENT_USER,\n      payload: decoded,\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data,\n    });\n  }\n};\n\nexport const logout = () => (dispatch) => {\n  localStorage.removeItem(\"jwtToken\");\n  setJWTToken(false);\n  dispatch({\n    type: SET_CURRENT_USER,\n    payload: {},\n  });\n};\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { createProject } from \"../../actions/projectActions\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\nclass AddProject extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      projectName: \"\",\n      projectIdentifier: \"\",\n      description: \"\",\n      start_date: \"\",\n      end_date: \"\",\n      errors: {},\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentWillReceiveProps(someProps) {\n    if (someProps.errors) {\n      this.setState({ errors: someProps.errors });\n    }\n  }\n  onSubmit(e) {\n    e.preventDefault();\n    const newProject = {\n      projectName: this.state.projectName,\n      projectIdentifier: this.state.projectIdentifier,\n      description: this.state.description,\n      start_date: this.state.start_date,\n      end_date: this.state.end_date,\n    };\n\n    // new project will be sent to the BE\n    this.props.createProject(newProject, this.props.history);\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"project\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h5 className=\"display-4 text-center\">\n                Create / Edit Project form\n              </h5>\n              <hr />\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.projectName,\n                    })}\n                    placeholder=\"Project Name\"\n                    name=\"projectName\"\n                    value={this.state.projectName}\n                    onChange={this.onChange}\n                  />\n                  {errors.projectName && (\n                    <div className=\"invalid-feedback\">{errors.projectName}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.projectIdentifier,\n                    })}\n                    name=\"projectIdentifier\"\n                    placeholder=\"Unique Project ID\"\n                    value={this.state.projectIdentifier}\n                    onChange={this.onChange}\n                  />\n                  {errors.projectIdentifier && (\n                    <div className=\"invalid-feedback\">\n                      {errors.projectIdentifier}\n                    </div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <textarea\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.description,\n                    })}\n                    placeholder=\"Project Description\"\n                    name=\"description\"\n                    value={this.state.description}\n                    onChange={this.onChange}\n                  ></textarea>\n                  {errors.description && (\n                    <div className=\"invalid-feedback\">{errors.description}</div>\n                  )}\n                </div>\n                <h6>Start Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"start_date\"\n                    value={this.state.start_date}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <h6>Estimated End Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"end_date\"\n                    value={this.state.end_date}\n                    onChange={this.onChange}\n                  />\n                </div>\n\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block mt-4\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nAddProject.propTypes = {\n  createProject: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps, { createProject })(AddProject);\n","import { GET_ERRORS } from \"../actions/types\";\n\nconst initialState = {};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_ERRORS:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n","import { GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"../actions/types\";\n\nconst initialState = {\n  // list of projects\n  projects: [],\n\n  // ignore\n  project: {},\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_PROJECTS:\n      return {\n        ...state,\n        projects: action.payload,\n      };\n    case GET_PROJECT:\n      return {\n        ...state,\n        project: action.payload,\n      };\n\n    case DELETE_PROJECT:\n      return {\n        ...state,\n        projects: state.projects.filter(\n          (project) => project.projectIdentifier !== action.payload\n        ),\n      };\n    default:\n      return state;\n  }\n}\n","import { SET_CURRENT_USER } from \"../actions/types\";\n\nconst initialState = {\n  validToken: false,\n  user: {},\n};\n\nconst booleanActionPayload = (payload) => {\n  if (payload) {\n    return true;\n  } else {\n    return false;\n  }\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_CURRENT_USER:\n      return {\n        ...state,\n        validToken: booleanActionPayload(action.payload),\n        user: action.payload,\n      };\n    default:\n      return state;\n  }\n}\n","import {\n  GET_BACKLOG,\n  GET_PROJECT_TASK,\n  DELETE_PROJECT_TASK\n} from \"../actions/types\";\n\nconst initialState = {\n  project_tasks: [],\n  project_task: {}\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_BACKLOG:\n      return {\n        ...state,\n        project_tasks: action.payload\n      };\n\n    case GET_PROJECT_TASK:\n      return {\n        ...state,\n        project_task: action.payload\n      };\n\n    case DELETE_PROJECT_TASK:\n      return {\n        ...state,\n        project_tasks: state.project_tasks.filter(\n          project_task => project_task.projectSequence !== action.payload\n        )\n      };\n\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport errorReducer from \"./errorReducer\";\nimport projectReducer from \"./projectReducer\";\nimport securityReducer from \"./securityReducer\";\nimport backlogReducer from \"./backlogReducer\";\n\nexport default combineReducers({\n  errors: errorReducer,\n  project: projectReducer,\n  security: securityReducer,\n  backlog: backlogReducer,\n});\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst initalState = {};\nconst middleware = [thunk];\n\nlet store;\n\nif (window.navigator.userAgent.includes(\"Chrome\")) {\n  store = createStore(\n    rootReducer,\n    initalState,\n    compose(\n      applyMiddleware(...middleware),\n      window.__REDUX_DEVTOOLS_EXTENSION__ &&\n        window.__REDUX_DEVTOOLS_EXTENSION__()\n    )\n  );\n} else {\n  store = createStore(\n    rootReducer,\n    initalState,\n    compose(applyMiddleware(...middleware))\n  );\n}\n\nexport default store;\n","import React, { Component } from \"react\";\nimport { getProject, createProject } from \"../../actions/projectActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\n\nclass UpdateProject extends Component {\n  //set state\n  constructor() {\n    super();\n\n    this.state = {\n      id: \"\",\n      projectName: \"\",\n      projectIdentifier: \"\",\n      description: \"\",\n      start_date: \"\",\n      end_date: \"\",\n      errors: {}\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n    const {\n      id,\n      projectName,\n      projectIdentifier,\n      description,\n      start_date,\n      end_date\n    } = nextProps.project;\n\n    this.setState({\n      id,\n      projectName,\n      projectIdentifier,\n      description,\n      start_date,\n      end_date\n    });\n  }\n\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    this.props.getProject(id, this.props.history);\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const updateProject = {\n      id: this.state.id,\n      projectName: this.state.projectName,\n      projectIdentifier: this.state.projectIdentifier,\n      description: this.state.description,\n      start_date: this.state.start_date,\n      end_date: this.state.end_date\n    };\n\n    this.props.createProject(updateProject, this.props.history);\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"project\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h5 className=\"display-4 text-center\">Update Project form</h5>\n              <hr />\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.projectName\n                    })}\n                    placeholder=\"Project Name\"\n                    name=\"projectName\"\n                    value={this.state.projectName}\n                    onChange={this.onChange}\n                  />\n                  {errors.projectName && (\n                    <div className=\"invalid-feedback\">{errors.projectName}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Unique Project ID\"\n                    name=\"projectIdentifier\"\n                    value={this.state.projectIdentifier}\n                    onChange={this.onChange}\n                    disabled\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <textarea\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.description\n                    })}\n                    placeholder=\"Project Description\"\n                    name=\"description\"\n                    onChange={this.onChange}\n                    value={this.state.description}\n                  />\n                  {errors.description && (\n                    <div className=\"invalid-feedback\">{errors.description}</div>\n                  )}\n                </div>\n                <h6>Start Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"start_date\"\n                    value={this.state.start_date}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <h6>Estimated End Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"end_date\"\n                    value={this.state.end_date}\n                    onChange={this.onChange}\n                  />\n                </div>\n\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block mt-4\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nUpdateProject.propTypes = {\n  getProject: PropTypes.func.isRequired,\n  createProject: PropTypes.func.isRequired,\n  project: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  project: state.project.project,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { getProject, createProject }\n)(UpdateProject);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { deleteProjectTask } from \"../../../actions/backlogActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nclass ProjectTask extends Component {\n  onDeleteClick(backlog_id, pt_id) {\n    this.props.deleteProjectTask(backlog_id, pt_id);\n  }\n  render() {\n    const { project_task } = this.props;\n    let priorityString;\n    let priorityClass;\n\n    if (project_task.priority === 1) {\n      priorityClass = \"bg-danger text-light\";\n      priorityString = \"HIGH\";\n    }\n\n    if (project_task.priority === 2) {\n      priorityClass = \"bg-warning text-light\";\n      priorityString = \"MEDIUM\";\n    }\n\n    if (project_task.priority === 3) {\n      priorityClass = \"bg-info text-light\";\n      priorityString = \"LOW\";\n    }\n\n    return (\n      <div className=\"card mb-1 bg-light\">\n        <div className={`card-header text-primary ${priorityClass}`}>\n          ID: {project_task.projectSequence} -- Priority: {priorityString}\n        </div>\n        <div className=\"card-body bg-light\">\n          <h5 className=\"card-title\">{project_task.summary}</h5>\n          <p className=\"card-text text-truncate \">\n            {project_task.acceptanceCriteria}\n          </p>\n          <Link\n            to={`/updateProjectTask/${project_task.projectIdentifier}/${\n              project_task.projectSequence\n            }`}\n            className=\"btn btn-primary\"\n          >\n            View / Update\n          </Link>\n\n          <button\n            className=\"btn btn-danger ml-4\"\n            onClick={this.onDeleteClick.bind(\n              this,\n              project_task.projectIdentifier,\n              project_task.projectSequence\n            )}\n          >\n            Delete\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nProjectTask.propTypes = {\n  deleteProjectTask: PropTypes.func.isRequired\n};\nexport default connect(\n  null,\n  { deleteProjectTask }\n)(ProjectTask);\n","import axios from \"axios\";\nimport {\n  GET_ERRORS,\n  GET_BACKLOG,\n  GET_PROJECT_TASK,\n  DELETE_PROJECT_TASK\n} from \"./types\";\n\n//Fix bug with priority in Spring Boot Server, needs to check null first\nexport const addProjectTask = (\n  backlog_id,\n  project_task,\n  history\n) => async dispatch => {\n  try {\n    await axios.post(`/api/backlog/${backlog_id}`, project_task);\n    history.push(`/projectBoard/${backlog_id}`);\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const getBacklog = backlog_id => async dispatch => {\n  try {\n    const res = await axios.get(`/api/backlog/${backlog_id}`);\n    dispatch({\n      type: GET_BACKLOG,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const getProjectTask = (\n  backlog_id,\n  pt_id,\n  history\n) => async dispatch => {\n  try {\n    const res = await axios.get(`/api/backlog/${backlog_id}/${pt_id}`);\n    dispatch({\n      type: GET_PROJECT_TASK,\n      payload: res.data\n    });\n  } catch (err) {\n    history.push(\"/dashboard\");\n  }\n};\n\nexport const updateProjectTask = (\n  backlog_id,\n  pt_id,\n  project_task,\n  history\n) => async dispatch => {\n  try {\n    await axios.patch(`/api/backlog/${backlog_id}/${pt_id}`, project_task);\n    history.push(`/projectBoard/${backlog_id}`);\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const deleteProjectTask = (backlog_id, pt_id) => async dispatch => {\n  if (\n    window.confirm(\n      `You are deleting project task ${pt_id}, this action cannot be undone`\n    )\n  ) {\n    await axios.delete(`/api/backlog/${backlog_id}/${pt_id}`);\n    dispatch({\n      type: DELETE_PROJECT_TASK,\n      payload: pt_id\n    });\n  }\n};\n","import React, { Component } from \"react\";\nimport ProjectTask from \"./ProjectTasks/ProjectTask\";\n\nclass Backlog extends Component {\n  render() {\n    const { project_tasks_prop } = this.props;\n\n    const tasks = project_tasks_prop.map((project_task) => (\n      <ProjectTask key={project_task.id} project_task={project_task} />\n    ));\n\n    let todoItems = [];\n    let inProgressItems = [];\n    let doneItems = [];\n\n    for (let i = 0; i < tasks.length; i++) {\n      if (tasks[i].props.project_task.status === \"TO_DO\") {\n        todoItems.push(tasks[i]);\n      }\n\n      if (tasks[i].props.project_task.status === \"IN_PROGRESS\") {\n        inProgressItems.push(tasks[i]);\n      }\n\n      if (tasks[i].props.project_task.status === \"DONE\") {\n        doneItems.push(tasks[i]);\n      }\n    }\n\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-4\">\n            <div className=\"card text-center mb-2\">\n              <div className=\"card-header bg-secondary text-white\">\n                <h3>TO DO</h3>\n              </div>\n            </div>\n            {todoItems}\n            {\n              // insert tasks here\n            }\n          </div>\n          <div className=\"col-md-4\">\n            <div className=\"card text-center mb-2\">\n              <div className=\"card-header bg-primary text-white\">\n                <h3>In Progress</h3>\n              </div>\n            </div>\n            {inProgressItems}\n          </div>\n          <div className=\"col-md-4\">\n            <div className=\"card text-center mb-2\">\n              <div className=\"card-header bg-success text-white\">\n                <h3>Done</h3>\n              </div>\n            </div>\n            {doneItems}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Backlog;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Backlog from \"./Backlog\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { getBacklog } from \"../../actions/backlogActions\";\n\nclass ProjectBoard extends Component {\n  //constructor to handle errors\n  constructor() {\n    super();\n    this.state = {\n      errors: {}\n    };\n  }\n\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    this.props.getBacklog(id);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  render() {\n    const { id } = this.props.match.params;\n    const { project_tasks } = this.props.backlog;\n    const { errors } = this.state;\n\n    let BoardContent;\n\n    const boardAlgorithm = (errors, project_tasks) => {\n      if (project_tasks.length < 1) {\n        if (errors.projectNotFound) {\n          return (\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\n              {errors.projectNotFound}\n            </div>\n          );\n        } else {\n          return (\n            <div className=\"alert alert-info text-center\" role=\"alert\">\n              No Project Tasks on this board\n            </div>\n          );\n        }\n      } else {\n        return <Backlog project_tasks_prop={project_tasks} />;\n      }\n    };\n\n    BoardContent = boardAlgorithm(errors, project_tasks);\n\n    return (\n      <div className=\"container\">\n        <Link to={`/addProjectTask/${id}`} className=\"btn btn-primary mb-3\">\n          <i className=\"fas fa-plus-circle\"> Create Project Task</i>\n        </Link>\n        <br />\n        <hr />\n        {BoardContent}\n      </div>\n    );\n  }\n}\n\nProjectBoard.propTypes = {\n  backlog: PropTypes.object.isRequired,\n  getBacklog: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  backlog: state.backlog,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { getBacklog }\n)(ProjectBoard);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport { addProjectTask } from \"../../../actions/backlogActions\";\nimport PropTypes from \"prop-types\";\n\nclass AddProjectTask extends Component {\n  constructor(props) {\n    super(props);\n    const { id } = this.props.match.params;\n\n    this.state = {\n      summary: \"\",\n      acceptanceCriteria: \"\",\n      status: \"\",\n      priority: 0,\n      dueDate: \"\",\n      projectIdentifier: id,\n      errors: {}\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  // on change\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n  //on submit\n  onSubmit(e) {\n    e.preventDefault();\n\n    const newTask = {\n      summary: this.state.summary,\n      acceptanceCriteria: this.state.acceptanceCriteria,\n      status: this.state.status,\n      priority: this.state.priority,\n      dueDate: this.state.dueDate\n    };\n\n    this.props.addProjectTask(\n      this.state.projectIdentifier,\n      newTask,\n      this.props.history\n    );\n  }\n\n  render() {\n    const { id } = this.props.match.params;\n    const { errors } = this.state;\n    return (\n      <div className=\"add-PBI\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <Link to={`/projectBoard/${id}`} className=\"btn btn-light\">\n                Back to Project Board\n              </Link>\n              <h4 className=\"display-4 text-center\">Add Project Task</h4>\n              <p className=\"lead text-center\">Project Name + Project Code</p>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.summary\n                    })}\n                    name=\"summary\"\n                    placeholder=\"Project Task summary\"\n                    value={this.state.summary}\n                    onChange={this.onChange}\n                  />\n                  {errors.summary && (\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <textarea\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Acceptance Criteria\"\n                    name=\"acceptanceCriteria\"\n                    value={this.state.acceptanceCriteria}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <h6>Due Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"dueDate\"\n                    value={this.state.dueDate}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"priority\"\n                    value={this.state.priority}\n                    onChange={this.onChange}\n                  >\n                    <option value={0}>Select Priority</option>\n                    <option value={1}>High</option>\n                    <option value={2}>Medium</option>\n                    <option value={3}>Low</option>\n                  </select>\n                </div>\n\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"status\"\n                    value={this.state.status}\n                    onChange={this.onChange}\n                  >\n                    <option value=\"\">Select Status</option>\n                    <option value=\"TO_DO\">TO DO</option>\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\n                    <option value=\"DONE\">DONE</option>\n                  </select>\n                </div>\n\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block mt-4\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nAddProjectTask.propTypes = {\n  addProjectTask: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { addProjectTask }\n)(AddProjectTask);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport { Link } from \"react-router-dom\";\nimport {\n  getProjectTask,\n  updateProjectTask\n} from \"../../../actions/backlogActions\";\nimport PropTypes from \"prop-types\";\n\nclass UpdateProjectTask extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      id: \"\",\n      projectSequence: \"\",\n      summary: \"\",\n      acceptanceCriteria: \"\",\n      status: \"\",\n      priority: \"\",\n      dueDate: \"\",\n      projectIdentifier: \"\",\n      create_At: \"\",\n      errors: {}\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    const { backlog_id, pt_id } = this.props.match.params;\n    this.props.getProjectTask(backlog_id, pt_id, this.props.history);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n\n    const {\n      id,\n      projectSequence,\n      summary,\n      acceptanceCriteria,\n      status,\n      priority,\n      dueDate,\n      projectIdentifier,\n      create_At\n    } = nextProps.project_task;\n\n    this.setState({\n      id,\n      projectSequence,\n      summary,\n      acceptanceCriteria,\n      status,\n      priority,\n      dueDate,\n      projectIdentifier,\n      create_At\n    });\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const UpdateProjectTask = {\n      id: this.state.id,\n      projectSequence: this.state.projectSequence,\n      summary: this.state.summary,\n      acceptanceCriteria: this.state.acceptanceCriteria,\n      status: this.state.status,\n      priority: this.state.priority,\n      dueDate: this.state.dueDate,\n      projectIdentifier: this.state.projectIdentifier,\n      create_At: this.state.create_At\n    };\n\n    // console.log(UpdateProjectTask);\n    this.props.updateProjectTask(\n      this.state.projectIdentifier,\n      this.state.projectSequence,\n      UpdateProjectTask,\n      this.props.history\n    );\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"add-PBI\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <Link\n                to={`/projectBoard/${this.state.projectIdentifier}`}\n                className=\"btn btn-light\"\n              >\n                Back to Project Board\n              </Link>\n              <h4 className=\"display-4 text-center\">Update Project Task</h4>\n              <p className=\"lead text-center\">\n                Project Name: {this.state.projectIdentifier} | Project Task ID:{\" \"}\n                {this.state.projectSequence}{\" \"}\n              </p>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.summary\n                    })}\n                    name=\"summary\"\n                    placeholder=\"Project Task summary\"\n                    value={this.state.summary}\n                    onChange={this.onChange}\n                  />\n                  {errors.summary && (\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <textarea\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Acceptance Criteria\"\n                    name=\"acceptanceCriteria\"\n                    value={this.state.acceptanceCriteria}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <h6>Due Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"dueDate\"\n                    value={this.state.dueDate}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"priority\"\n                    value={this.state.priority}\n                    onChange={this.onChange}\n                  >\n                    <option value={0}>Select Priority</option>\n                    <option value={1}>High</option>\n                    <option value={2}>Medium</option>\n                    <option value={3}>Low</option>\n                  </select>\n                </div>\n\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"status\"\n                    value={this.state.status}\n                    onChange={this.onChange}\n                  >\n                    <option value=\"\">Select Status</option>\n                    <option value=\"TO_DO\">TO DO</option>\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\n                    <option value=\"DONE\">DONE</option>\n                  </select>\n                </div>\n\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block mt-4\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nUpdateProjectTask.propTypes = {\n  getProjectTask: PropTypes.func.isRequired,\n  project_task: PropTypes.object.isRequired,\n  updateProjectTask: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  project_task: state.backlog.project_task,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { getProjectTask, updateProjectTask }\n)(UpdateProjectTask);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nclass Landing extends Component {\n  render() {\n    return (\n      <div className=\"landing\">\n        <div className=\"light-overlay landing-inner text-dark\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-12 text-center\">\n                <h1 className=\"display-3 mb-4\">Personal Kanban Tool</h1>\n                <p className=\"lead\">\n                  Create your account to join active projects or start you own\n                </p>\n                <hr />\n                <Link to=\"/register\" className=\"btn btn-lg btn-primary mr-2\">\n                  Sign Up\n                </Link>\n                <Link to=\"/login\" className=\"btn btn-lg btn-secondary mr-2\">\n                  Login\n                </Link>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Landing;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { createNewUser } from \"../../actions/securityAction\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\nclass Register extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      username: \"\",\n      fullName: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      errors: {},\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentWillReceiveProps(someProps) {\n    if (someProps.errors) {\n      this.setState({ errors: someProps.errors });\n    }\n  }\n  onSubmit(e) {\n    e.preventDefault();\n    const newUser = {\n      username: this.state.username,\n      fullName: this.state.fullName,\n      password: this.state.password,\n      confirmPassword: this.state.confirmPassword,\n    };\n\n    this.props.createNewUser(newUser, this.props.history);\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"register\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h1 className=\"display-4 text-center\">Sign Up</h1>\n              <p className=\"lead text-center\">Create your Account</p>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.fullName,\n                    })}\n                    placeholder=\"Full Name\"\n                    name=\"fullName\"\n                    value={this.state.fullName}\n                    onChange={this.onChange}\n                  />\n                  {errors.fullName && (\n                    <div className=\"invalid-feedback\">{errors.fullName}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Username\"\n                    name=\"username\"\n                    value={this.state.username}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    value={this.state.password}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Confirm Password\"\n                    name=\"confirmPassword\"\n                    value={this.state.confirmPassword}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nRegister.propTypes = {\n  createNewUser: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  errors: state.errors,\n});\nexport default connect(mapStateToProps, { createNewUser })(Register);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { login } from \"../../actions/securityAction\";\nimport PropTypes from \"prop-types\";\n\nclass Login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      username: \"\",\n      password: \"'\",\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  componentWillReceiveProps(someProps) {\n    if (someProps.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n  onSubmit(e) {\n    e.preventDefault();\n    const LoginRequest = {\n      username: this.state.username,\n      password: this.state.password,\n    };\n\n    this.props.login(LoginRequest);\n  }\n\n  render() {\n    return (\n      <div className=\"login\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h1 className=\"display-4 text-center\">Log In</h1>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"email\"\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Email Address\"\n                    name=\"username\"\n                    value={this.state.username}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    value={this.state.password}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nLogin.propTypes = {\n  login: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  errors: state.errors,\n  security: state.security,\n});\n\nexport default connect(mapStateToProps, { login })(Login);\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Dashboard from \"./components/Dashboard\";\nimport Header from \"./components/Layout/Header\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport AddProject from \"./components/Project/AddProject\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport UpdateProject from \"./components/Project/UpdateProject\";\nimport ProjectBoard from \"./components/ProjectBoard/ProjectBoard\";\nimport AddProjectTask from \"./components/ProjectBoard/ProjectTasks/AddProjectTask\";\nimport UpdateProjectTask from \"./components/ProjectBoard/ProjectTasks/UpdateProjectTask\";\nimport Landing from \"./components/Layout/Landing\";\nimport Register from \"./components/UserManagement/Register\";\nimport Login from \"./components/UserManagement/Login\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <div className=\"App\">\n          <Header />\n\n          <Route exact path=\"/\" component={Landing} />\n          <Route exact path=\"/register\" component={Register} />\n          <Route exact path=\"/login\" component={Login} />\n\n          <Route exact path=\"/dashboard\" component={Dashboard} />\n          <Route exact path=\"/addProject\" component={AddProject} />\n          <Route exact path=\"/updateProject/:id\" component={UpdateProject} />\n          <Route exact path=\"/projectBoard/:id\" component={ProjectBoard} />\n          <Route exact path=\"/addProjectTask/:id\" component={AddProjectTask} />\n          <Route\n            exact\n            path=\"/updateProjectTask/:backlog_id/:pt_id\"\n            component={UpdateProjectTask}\n          />\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}